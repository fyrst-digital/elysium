"use strict";(window["webpackJsonpPluginblur-elysium-slider"]=window["webpackJsonpPluginblur-elysium-slider"]||[]).push([[9530],{9530:function(e,s,i){i.r(s),i.d(s,{default:function(){return d}});let{Component:t,Data:l,Context:n}=Shopware,{Criteria:r}=l;var d=t.wrapComponentConfig({template:'<div \n    :style="{ \n        position: \'relative\',\n    }">\n\n    <sw-simple-search-field\n        class="blur-elysium-slide-selection-search-field"\n        v-model:value="searchTerm"\n        :delay="300" \n        placeholder="Slides durchsuchen"\n        variant="form" \n        @focus="focusSearch" />\n\n    <sw-select-result-list \n        v-if="searchFocus === true"\n        ref="resultList"\n        :options="slidesCollection"\n        :empty-message="$tc(\'blurElysiumSlides.slideSearch.noResult\')"\n        @item-select="selectSlide"\n        @outside-click="blurSearch">\n\n        <template #before-item-list="{item, index}">\n            <div v-if="slidesLoading"\n                :style="{ \n                position: \'relative\',\n                    minHeight: \'64px\',\n                }">\n                <mt-loader \n                    size="24px" />\n            </div>\n        </template>\n\n        <template #result-item="{item, index}">\n\n            <div\n                is="sw-select-result"\n                :selected="slideIsSelected( item )"\n                v-bind="{ item, index }"\n                class="blur-es-selection__search-result-list-item"\n                @item-select="selectSlide">\n\n                <div class="blur-elysium-slide-selection-search-item">\n                    <div>\n                        <sw-highlight-text \n                            :class="[\'blur-elysium-slide-selection-search-name\']"\n                            :searchTerm="searchTerm"\n                            :text="item.translated.name" />\n                        <sw-highlight-text \n                            :class="[\'blur-elysium-slide-selection-search-title\']"\n                            :searchTerm="searchTerm"\n                            :text="item.translated.title ? item.translated.title.replace(/<\\/?[^>]+>/ig, \' \') : $tc(\'blurElysium.general.noHeadline\')" />\n                    </div>\n\n                    <div>\n                        {{ selectedSlidesIds.includes(item.id) ? $tc(\'blurElysium.general.removeItem\') : $tc(\'blurElysium.general.addItem\') }}\n                    </div>\n                </div>\n            </div>\n\n        </template>\n\n    </sw-select-result-list>\n</div>',inject:["repositoryFactory"],props:{selectedSlidesIds:{type:Array,required:!0}},data(){return{searchTerm:"",searchFocus:!1,slidesCollection:{},slidesLoading:!0}},watch:{searchFocus(e){!0===e?this.loadSlides():this.slidesCollection={}},searchTerm(){this.loadSlides()}},computed:{slidesRepository(){return this.repositoryFactory.create("blur_elysium_slides")},slidesCriteria(){let e=new r;return e.setTerm(this.searchTerm),e.setLimit(20),e}},methods:{focusSearch(){this.slidesLoading=!0,this.searchFocus=!0},blurSearch(){this.searchFocus=!1},loadSlides(){this.slidesRepository.search(this.slidesCriteria,n.api).then(e=>{this.slidesCollection=e,this.slidesLoading=!1}).catch(e=>{console.error("Error loading slides",e)})},selectSlide(e){this.searchFocus=!1,this.$emit("slide-selected",e)},slideIsSelected(e){return!!this.selectedSlidesIds.includes(e.id)}}})}}]);