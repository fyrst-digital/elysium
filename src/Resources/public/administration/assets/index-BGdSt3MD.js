const t=`<mt-card position-identifier="blurElysium.slide.section.base" :title="cardTitle" :class="['content-no-padding']" :style="{ overflow: 'visible', }"> <template #headerRight> <blur-device-switch layout="row" show-label="false" :style="{ padding: '0', width: '100%', justifyContent: 'center', '--container-gap': '12px', '--icon-padding': '6px', '--icon-bg-color': '#ffffff', '--icon-hover-bg-color': 'var(--color-gray-100)', }" :device="device" @change-device="device => elysiumUI.setDevice(device)" /> </template> <template #tabs> <mt-tabs :defaultItem="activeTab" :items="tabs" @new-item-active="activeTab = $event" /> </template> <blur-elysium-slides-form-general v-if="activeTab === 'content'" /> <blur-elysium-slides-form-linking v-if="activeTab === 'linking'" /> </mt-card>`,{Component:i,Mixin:a,Store:l}=Shopware,n=i.wrapComponentConfig({template:t,mixins:[a.getByName("blur-device-utilities")],data(){return{activeTab:"content"}},computed:{elysiumUI(){return l.get("elysiumUI")},device(){return this.elysiumUI.device},tabs(){return[{label:this.$tc("blurElysiumSlides.forms.contentLabel"),name:"content"},{label:this.$tc("blurElysiumSlides.forms.slideLinking.label"),name:"linking"}]},activeTabMeta(){return this.tabs.find(e=>e.name===this.activeTab)},cardTitle(){return this.$tc("blurElysiumSlides.forms.generalTitle")}}});export{n as default};
//# sourceMappingURL=index-BGdSt3MD.js.map
