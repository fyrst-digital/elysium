const t=`<div :style="{ position: 'relative', }"> <sw-simple-search-field class="blur-elysium-slide-selection-search-field" v-model:value="searchTerm" :delay="300" placeholder="Slides durchsuchen" variant="form" @focus="focusSearch" /> <sw-select-result-list v-if="searchFocus === true" ref="resultList" :options="slidesCollection" :empty-message="$tc('blurElysiumSlides.slideSearch.noResult')" @item-select="selectSlide" @outside-click="blurSearch" > <template #before-item-list="{item, index}"> <div v-if="slidesLoading" :style="{ position: 'relative', minHeight: '64px', }" > <mt-loader size="24px"/> </div> </template> <template #result-item="{item, index}"> <sw-select-result :selected="slideIsSelected( item )" v-bind="{ item, index }" class="blur-es-selection__search-result-list-item" @item-select="selectSlide" > <div class="blur-elysium-slide-selection-search-item"> <div> <sw-highlight-text :class="['blur-elysium-slide-selection-search-name']" :searchTerm="searchTerm" :text="item.translated.name" /> <sw-highlight-text :class="['blur-elysium-slide-selection-search-title']" :searchTerm="searchTerm" :text="item.translated.title ? item.translated.title.replace(/<\\/?[^>]+>/ig, ' ') : $tc('blurElysium.general.noHeadline')" /> </div> <div> {{slideIsSelected(item) ? $tc('blurElysium.general.removeItem') : $tc('blurElysium.general.addItem') }} </div> </div> </sw-select-result> </template> </sw-select-result-list> </div>`,{Component:i,Data:l,Context:r}=Shopware,{Criteria:a}=l,c=i.wrapComponentConfig({template:t,inject:["repositoryFactory"],props:{selectedSlides:{type:Array,required:!0}},data(){return{searchTerm:"",searchFocus:!1,slidesCollection:{},slidesLoading:!0}},watch:{searchFocus(e){e===!0?this.loadSlides():this.slidesCollection={}},searchTerm(){this.loadSlides()}},computed:{slidesRepository(){return this.repositoryFactory.create("blur_elysium_slides")},slidesCriteria(){const e=new a;return e.setTerm(this.searchTerm),e.setLimit(20),e}},methods:{focusSearch(){this.slidesLoading=!0,this.searchFocus=!0},blurSearch(){this.searchFocus=!1},loadSlides(){this.slidesRepository.search(this.slidesCriteria,r.api).then(e=>{this.slidesCollection=e,this.slidesLoading=!1}).catch(e=>{console.error("Error loading slides",e)})},selectSlide(e){this.searchFocus=!1,this.slideIsSelected(e)?this.$emit("remove-slide",e):this.$emit("add-slide",e)},slideIsSelected(e){return this.selectedSlides.some(s=>s.id===e.id)}}});export{c as default};
//# sourceMappingURL=index-CAe1BfEA.js.map
