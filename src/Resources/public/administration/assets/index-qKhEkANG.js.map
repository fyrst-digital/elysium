{"version":3,"file":"index-qKhEkANG.js","sources":["../../../app/administration/src/component/slides/settings.ts","../../../app/administration/src/component/slides/detail/template.html.twig","../../../app/administration/src/component/slides/detail/index.ts"],"sourcesContent":["import { SlideSettings, ContentSettings, ViewportConfig } from '@elysium/types/slide';\n\n/**\n * @todo\n * - add typed `ContentSettings`\n * - change current default to named export\n */\n\nconst { Utils } = Shopware;\n\nconst viewportConfig: ViewportConfig = {\n    slide: {\n        paddingX: null,\n        paddingY: null,\n        borderRadius: null,\n        alignItems: null,\n        justifyContent: null,\n    },\n    container: {\n        paddingX: null,\n        paddingY: null,\n        borderRadius: null,\n        maxWidth: null,\n        gap: null,\n        justifyContent: null,\n        alignItems: null,\n        columnWrap: true,\n        order: null,\n    },\n    content: {\n        paddingX: null,\n        paddingY: null,\n        maxWidth: null,\n        textAlign: null,\n    },\n    image: {\n        justifyContent: null,\n        maxWidth: null,\n        imageFullWidth: false,\n    },\n    coverMedia: {\n        objectPosX: null,\n        objectPosY: null,\n        objectFit: null,\n    },\n    headline: {\n        fontSize: 20,\n    },\n    description: {\n        fontSize: 14,\n    },\n};\n\nfunction defineViewportConfig(\n    overrides?: Partial<ViewportConfig>\n): ViewportConfig {\n    return Utils.object.deepMergeObject(\n        structuredClone(viewportConfig),\n        overrides\n    );\n}\n\nexport const defaultSlideSettings: SlideSettings = {\n    slide: {\n        headline: {\n            color: '',\n            element: 'div',\n        },\n        description: {\n            color: null,\n        },\n        linking: {\n            type: 'custom',\n            buttonAppearance: 'primary',\n            buttonSize: 'md',\n            openExternal: false,\n            overlay: false,\n            showProductFocusImage: true,\n        },\n        bgColor: '',\n        bgGradient: {\n            startColor: '',\n            endColor: '',\n            gradientType: 'linear-gradient',\n            gradientDeg: 45,\n        },\n        cssClass: null,\n    },\n    container: {\n        bgColor: '',\n        bgEffect: {\n            blur: '8px',\n        },\n    },\n    viewports: {\n        mobile: defineViewportConfig(),\n        tablet: defineViewportConfig({\n            container: {\n                columnWrap: false,\n            },\n            headline: {\n                fontSize: 32,\n            },\n            description: {\n                fontSize: 16,\n            },\n        }),\n        desktop: defineViewportConfig({\n            container: {\n                columnWrap: false,\n            },\n            headline: {\n                fontSize: 40,\n            },\n            description: {\n                fontSize: 20,\n            },\n        }),\n    },\n    slideTemplate: 'default',\n    customTemplateFile: null,\n};\n\nexport const defaultContentSettings: ContentSettings = {\n    slideCover: {\n        alt: null,\n        title: null,\n    },\n}","<sw-page>\n    <template #smart-bar-header>\n        <h2>\n            {{ metaTitle }}\n        </h2>\n    </template>\n\n    <template #language-switch>\n        <sw-language-switch\n            :save-changes-function=\"saveOnLanguageChange\"\n            :abort-change-function=\"abortOnLanguageChange\"\n            :disabled=\"newSlide === true\"\n            @on-change=\"onChangeLanguage\"\n        />\n    </template>\n\n    <template #smart-bar-actions>\n        <mt-button\n            :disabled=\"(newSlide !== true && !hasChanges)\"\n            v-tooltip=\"{\n                message: cancelActionMessage\n            }\"\n            variant=\"secondary\"\n            size=\"default\"\n            @click=\"cancelAction\"\n        >\n            {{ $tc('blurElysium.action.cancel') }}\n        </mt-button>\n        <sw-button-group :split-button=\"true\">\n            <sw-button-process\n                :is-loading=\"isLoading\"\n                :disabled=\"!(permissionCreate || permissionEdit)\"\n                variant=\"primary\"\n                @click.prevent=\"saveSlide\"\n            >\n                {{ $tc('sw-customer.detail.buttonSave') }}\n            </sw-button-process>\n            <sw-context-button v-if=\"newSlide !== true\">\n                <template #button>\n                    <sw-button\n                        square\n                        variant=\"primary\"\n                        :disabled=\"isLoading\"\n                    >\n                        <blur-icon\n                            name=\"blurph-caret-down-bold\"\n                            size=\"16\"\n                        />\n                    </sw-button>\n                </template>\n                <sw-context-menu-item\n                    :disabled=\"!permissionCreate\"\n                    @click=\"onCopySlide\"\n                >\n                    {{ $tc('blurElysiumSlides.actions.copySlide') }}\n                </sw-context-menu-item>\n                <sw-context-menu-item\n                    variant=\"danger\"\n                    :disabled=\"!permissionDelete\"\n                    @click=\"permissionDelete === true ? showDeleteModal = true : null\"\n                >\n                    {{ $tc('blurElysiumSlides.actions.deleteSlide') }}\n                </sw-context-menu-item>\n            </sw-context-button>\n        </sw-button-group>\n    </template>\n\n    <template #content>\n        <div\n            v-if=\"slide\"\n            :style=\"viewStyle({ \n                mobile: { 'padding': '16px' } \n            })\"\n        >\n            <sw-tabs position-identifier=\"positionIdentifiers.placeholder\">\n                <sw-tabs-item\n                    :route=\"contentRoute\"\n                    :title=\"$tc('blurElysiumSlides.settings.baseLabel')\"\n                    :hasError=\"tabContentHasError\"\n                >\n                    {{ $tc('blurElysiumSlides.settings.baseLabel') }}\n                </sw-tabs-item>\n                <sw-tabs-item\n                    :route=\"mediaRoute\"\n                    :title=\"$tc('blurElysiumSlides.settings.mediaLabel')\"\n                >\n                    {{ $tc('blurElysiumSlides.settings.mediaLabel') }}\n                </sw-tabs-item>\n                <sw-tabs-item\n                    :route=\"displayRoute\"\n                    :title=\"$tc('blurElysium.general.appearance')\"\n                >\n                    {{ $tc('blurElysium.general.appearance') }}\n                </sw-tabs-item>\n                <sw-tabs-item\n                    :route=\"advancedRoute\"\n                    :title=\"$tc('blurElysiumSlides.settings.advancedLabel')\"\n                    :hasWarning=\"tabAdvancedHasWarning\"\n                    :warningTooltip=\"tabAdvancedWarningMessage\"\n                >\n                    {{ $tc('blurElysiumSlides.settings.advancedLabel') }}\n                </sw-tabs-item>\n                <template #content>\n                    <router-view/>\n                </template>\n            </sw-tabs>\n        </div>\n        <sw-confirm-modal\n            v-if=\"showDeleteModal === true\"\n            type=\"delete\"\n            :title=\"$tc('blurElysiumSlides.actions.deleteSlide')\"\n            :text=\"$tc('blurElysiumSlides.messages.slideDeleteConfirm')\"\n            @confirm=\"deleteSlide\"\n            @cancel=\"showDeleteModal = false\"\n            @close=\"showDeleteModal = false\"\n        />\n    </template>\n</sw-page>","import { defaultSlideSettings, defaultContentSettings } from '@elysium/component/slides/settings';\nimport template from './template.html.twig';\n\nconst { Component, Context, Mixin, Data, Utils, Store } = Shopware;\nconst { Criteria } = Data;\n\nexport default Component.wrapComponentConfig({\n    template,\n\n    inject: ['repositoryFactory', 'acl'],\n\n    mixins: [\n        Mixin.getByName('placeholder'),\n        Mixin.getByName('notification'),\n        Mixin.getByName('blur-style-utilities'),\n    ],\n\n    props: {\n        newSlide: {\n            type: Boolean,\n            required: true,\n            default: false,\n        },\n        slideId: {\n            type: String,\n            required: false,\n            default: null,\n        },\n    },\n\n    watch: {\n        newSlide(value) {\n            if (value === true) {\n                this.createSlide();\n            }\n        },\n\n        slideId() {\n            this.loadSlide();\n        },\n\n        slide: {\n            handler: function (newValue) {\n                this.hasChanges = this.slidesRepository.hasChanges(newValue);\n            },\n            deep: true,\n        },\n    },\n\n    metaInfo() {\n        return {\n            title: this.$createTitle(this.metaTitle),\n        };\n    },\n\n    data() {\n        return {\n            defaultSlideSettings: structuredClone(defaultSlideSettings),\n            defaultContentSettings: structuredClone(defaultContentSettings),\n            showDeleteModal: false,\n            isLoading: true,\n            isSaved: false,\n            hasChanges: false,\n        };\n    },\n\n    computed: {\n        context() {\n            return Store.get('context');\n        },\n\n        elysiumUI() {\n            return Store.get('elysiumUI');\n        },\n\n        elysiumSlide() {\n            return Store.get('elysiumSlide');\n        },\n\n        device() {\n            return Store.get('elysiumUI').device;\n        },\n\n        slide() {\n            return this.elysiumSlide.slide;\n        },\n\n        contentRoute() {\n            if (this.newSlide === false) {\n                return {\n                    name: 'blur.elysium.slides.detail.content',\n                    params: { id: this.slideId },\n                };\n            }\n\n            return { name: 'blur.elysium.slides.create.content' };\n        },\n\n        mediaRoute() {\n            if (this.newSlide === false) {\n                return {\n                    name: 'blur.elysium.slides.detail.media',\n                    params: { id: this.slideId },\n                };\n            }\n\n            return { name: 'blur.elysium.slides.create.media' };\n        },\n\n        displayRoute() {\n            if (this.newSlide === false) {\n                return {\n                    name: 'blur.elysium.slides.detail.display',\n                    params: { id: this.slideId },\n                };\n            }\n\n            return { name: 'blur.elysium.slides.create.display' };\n        },\n\n        advancedRoute() {\n            if (this.newSlide === false) {\n                return {\n                    name: 'blur.elysium.slides.detail.advanced',\n                    params: { id: this.slideId },\n                };\n            }\n\n            return { name: 'blur.elysium.slides.create.advanced' };\n        },\n\n        slidesRepository() {\n            return this.repositoryFactory.create('blur_elysium_slides');\n        },\n\n        customFieldSetRepository() {\n            return this.repositoryFactory.create('custom_field_set');\n        },\n\n        cancelActionMessage(): string {\n            if (this.newSlide === true) {\n                return this.$tc(\n                    'blurElysiumSlides.messages.cancelSlideCreation'\n                );\n            }\n\n            return this.$tc('blurElysiumSlides.messages.cancelSlideChanges');\n        },\n\n        metaTitle() {\n            return this.placeholder(\n                this.slide,\n                'name',\n                this.$tc('blurElysiumSlides.actions.newSlide')\n            );\n        },\n\n        permissionView() {\n            return this.acl.can('blur_elysium_slides.viewer');\n        },\n\n        permissionCreate() {\n            return this.acl.can('blur_elysium_slides.creator');\n        },\n\n        permissionEdit() {\n            return this.acl.can('blur_elysium_slides.editor');\n        },\n\n        permissionDelete() {\n            return this.acl.can('blur_elysium_slides.deleter');\n        },\n\n        tabContentHasError() {\n            if (\n                this.slide.slideSettings.slide.linking.type === 'product' &&\n                (this.slide.productId === undefined ||\n                    this.slide.productId === null ||\n                    this.slide.productId === '')\n            ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        tabAdvancedHasWarning() {\n            if (this.slide.slideSettings.customTemplateFile) {\n                return true;\n            }\n            return false;\n        },\n\n        tabAdvancedWarningMessage() {\n            return this.$t(\n                'blurElysiumSlides.messages.customTemplateFileDefinedNotice'\n            );\n        },\n    },\n\n    methods: {\n        setMediaSidebar(element) {\n            this.elysiumUI.setMediaSidebar(element);\n        },\n\n        createSlide() {\n            this.context.resetLanguageToDefault();\n            const slide = this.slidesRepository.create(Context.api);\n            Object.assign(slide, { \n                slideSettings: this.defaultSlideSettings,\n                contentSettings: this.defaultContentSettings\n            });\n            this.elysiumSlide.setSlide(slide);\n            console.log('new slider', this.slide)\n            this.isLoading = false;\n        },\n\n        deleteSlide() {\n            this.isLoading = true;\n\n            this.slidesRepository\n                .delete(this.slideId, Context.api)\n                .then(() => {\n                    this.$emit('delete-finish');\n                    this.$router.push({ name: 'blur.elysium.slides.overview' });\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        },\n\n        loadSlide() {\n\n            this.slidesRepository\n                .get(this.slideId, Context.api, new Criteria())\n                .then((slide) => {\n                    // const mergedSlideSettings = Utils.object.deepMergeObject(\n                    //     this.defaultSlideSettings,\n                    //     slide.slideSettings\n                    // );\n                    // slide.slideSettings = mergedSlideSettings;\n                    // const mergedContentSettings = Utils.object.deepMergeObject(\n                    //     this.defaultContentSettings,\n                    //     slide.contentSettings\n                    // );\n                    // slide.contentSettings = mergedContentSettings;\n                    const mergedSlide = this._mergeSettings(slide, {\n                        slideSettings: this.defaultSlideSettings,\n                        contentSettings: this.defaultContentSettings,\n                    })\n                    this.elysiumSlide.setSlide(mergedSlide);\n                    this.loadCustomFieldSets();\n                })\n                .catch((exception) => {\n                    console.warn(exception);\n                })\n                .finally(() => {\n                    this.isLoading = false;\n                });\n        },\n\n        loadCustomFieldSets() {\n            const criteria = new Criteria();\n\n            criteria.addFilter(\n                Criteria.equals('relations.entityName', 'blur_elysium_slides')\n            );\n\n            criteria\n                .getAssociation('customFields')\n                .addSorting(Criteria.sort('config.customFieldPosition'));\n\n            this.customFieldSetRepository\n                .search(criteria, Context.api)\n                .then((result) => {\n                    this.elysiumSlide.setCustomFieldSet(result);\n                })\n                .catch((exception) => {\n                    console.warn(exception);\n                });\n        },\n\n        overviewPush() {\n            this.$router.push({ name: 'blur.elysium.slides.overview' });\n        },\n\n        detailPush(id: string) {\n            this.$router.push({\n                name: 'blur.elysium.slides.detail',\n                params: { id },\n            });\n        },\n\n        async saveSlide() {\n            if (\n                !(\n                    (this.newSlide && this.permissionCreate) ||\n                    this.permissionEdit\n                )\n            ) {\n                return;\n            }\n\n            this.isLoading = true;\n\n            if (\n                this.slide.slideSettings.slide.linking.type === 'product' &&\n                [undefined, null, ''].includes(this.slide.productId)\n            ) {\n                this.createNotificationError({\n                    message: this.$t(\n                        'blurElysiumSlides.messages.productLinkingMissingEntity'\n                    ),\n                });\n                this.isLoading = false;\n                return;\n            }\n\n            this.slidesRepository\n                .save(this.slide)\n                .then((result) => {\n                    this.createNotificationSuccess({\n                        message: this.$t(\n                            'blurElysiumSlides.messages.slideSavedSuccess',\n                            { slide: this.slide.name }\n                        ),\n                    });\n\n                    if (this.newSlide === true) {\n                        // push to detail route\n                        this.detailPush(JSON.parse(result.config.data).id);\n                    }\n\n                    this.loadSlide();\n                })\n                .catch((reason) => {\n                    if (\n                        this.slide.name === undefined ||\n                        this.slide.name === null ||\n                        this.slide.name === ''\n                    ) {\n                        this.createNotificationError({\n                            title: this.$tc(\n                                'blurElysiumSlides.messages.emptySlideNameErrorTitle'\n                            ),\n                            message: this.$tc(\n                                'blurElysiumSlides.messages.emptySlideNameError'\n                            ),\n                        });\n                    } else {\n                        this.createNotificationError({\n                            message: this.$tc(\n                                'blurElysiumSlides.messages.slideSaveError'\n                            ),\n                        });\n                    }\n                    console.error(reason);\n                    this.isLoading = false;\n                });\n        },\n\n        cancelAction() {\n            if (this.newSlide === true) {\n                this.overviewPush();\n            } else {\n                this.$router.go(0);\n            }\n        },\n\n        saveOnLanguageChange() {\n            this.saveSlide();\n        },\n\n        abortOnLanguageChange() {\n            return this.slidesRepository.hasChanges(this.slide);\n        },\n\n        onChangeLanguage(languageId: string) {\n            this.context.setApiLanguageId(languageId);\n\n            if (this.slideId) {\n                this.loadSlide();\n            }\n        },\n\n        onCopySlide() {\n            if (this.permissionCreate !== true) {\n                return;\n            }\n\n            if (this.slidesRepository.hasChanges(this.slide)) {\n                this.createNotificationError({\n                    message: this.$tc(\n                        'blurElysiumSlides.messages.copyErrorUnsavedChanges'\n                    ),\n                });\n                return;\n            }\n\n            const cloneOptions = {\n                overwrites: {\n                    name: `${this.slide.name}-${this.$tc('blurElysium.general.copySuffix')}`,\n                },\n            };\n\n            this.isLoading = true;\n\n            this.slidesRepository\n                .clone(this.slide.id, cloneOptions)\n                .then((result) => {\n                    this.$router.push({\n                        name: 'blur.elysium.slides.detail',\n                        params: { id: result.id },\n                    });\n                })\n                .catch((error) => {\n                    console.warn(error);\n                });\n        },\n\n        _mergeSettings(slide: any, properties: object) {\n            Object.entries(properties).forEach(([key, defaultSettings]) => {\n                if (slide[key]) {\n                    slide[key] = Utils.object.deepMergeObject(defaultSettings, slide[key]);\n                } else {\n                    slide[key] = defaultSettings;\n                }\n            });\n            \n            return slide;\n        }\n    },\n\n    created() {\n        if (this.newSlide === true) {\n            this.createSlide();\n        } else {\n            this.loadSlide();\n        }\n    },\n\n    unmounted() {\n        this.elysiumSlide.clearSlide();\n        this.elysiumSlide.clearCustomFieldSet();\n        this.elysiumUI.resetDevice();\n    },\n});\n"],"names":["Utils","viewportConfig","defineViewportConfig","overrides","defaultSlideSettings","defaultContentSettings","template","Component","Context","Mixin","Data","Store","Criteria","index","value","newValue","element","slide","error","mergedSlide","exception","criteria","result","id","reason","languageId","cloneOptions","properties","key","defaultSettings"],"mappings":"AAQA,KAAM,CAAEA,MAAAA,CAAU,EAAA,SAEZC,EAAiC,CACnC,MAAO,CACH,SAAU,KACV,SAAU,KACV,aAAc,KACd,WAAY,KACZ,eAAgB,IACpB,EACA,UAAW,CACP,SAAU,KACV,SAAU,KACV,aAAc,KACd,SAAU,KACV,IAAK,KACL,eAAgB,KAChB,WAAY,KACZ,WAAY,GACZ,MAAO,IACX,EACA,QAAS,CACL,SAAU,KACV,SAAU,KACV,SAAU,KACV,UAAW,IACf,EACA,MAAO,CACH,eAAgB,KAChB,SAAU,KACV,eAAgB,EACpB,EACA,WAAY,CACR,WAAY,KACZ,WAAY,KACZ,UAAW,IACf,EACA,SAAU,CACN,SAAU,EACd,EACA,YAAa,CACT,SAAU,EAAA,CAElB,EAEA,SAASC,EACLC,EACc,CACd,OAAOH,EAAM,OAAO,gBAChB,gBAAgBC,CAAc,EAC9BE,CACJ,CACJ,CAEO,MAAMC,EAAsC,CAC/C,MAAO,CACH,SAAU,CACN,MAAO,GACP,QAAS,KACb,EACA,YAAa,CACT,MAAO,IACX,EACA,QAAS,CACL,KAAM,SACN,iBAAkB,UAClB,WAAY,KACZ,aAAc,GACd,QAAS,GACT,sBAAuB,EAC3B,EACA,QAAS,GACT,WAAY,CACR,WAAY,GACZ,SAAU,GACV,aAAc,kBACd,YAAa,EACjB,EACA,SAAU,IACd,EACA,UAAW,CACP,QAAS,GACT,SAAU,CACN,KAAM,KAAA,CAEd,EACA,UAAW,CACP,OAAQF,EAAqB,EAC7B,OAAQA,EAAqB,CACzB,UAAW,CACP,WAAY,EAChB,EACA,SAAU,CACN,SAAU,EACd,EACA,YAAa,CACT,SAAU,EAAA,CACd,CACH,EACD,QAASA,EAAqB,CAC1B,UAAW,CACP,WAAY,EAChB,EACA,SAAU,CACN,SAAU,EACd,EACA,YAAa,CACT,SAAU,EAAA,CAEjB,CAAA,CACL,EACA,cAAe,UACf,mBAAoB,IACxB,EAEaG,EAA0C,CACnD,WAAY,CACR,IAAK,KACL,MAAO,IAAA,CAEf,EChIeC,EAAA,6lFCGT,CAAE,UAAAC,EAAW,QAAAC,EAAS,MAAAC,EAAO,KAAAC,EAAM,MAAAV,EAAO,MAAAW,GAAU,SACpD,CAAE,SAAAC,CAAa,EAAAF,EAENG,EAAAN,EAAU,oBAAoB,CACzC,SAAAD,EAEA,OAAQ,CAAC,oBAAqB,KAAK,EAEnC,OAAQ,CACJG,EAAM,UAAU,aAAa,EAC7BA,EAAM,UAAU,cAAc,EAC9BA,EAAM,UAAU,sBAAsB,CAC1C,EAEA,MAAO,CACH,SAAU,CACN,KAAM,QACN,SAAU,GACV,QAAS,EACb,EACA,QAAS,CACL,KAAM,OACN,SAAU,GACV,QAAS,IAAA,CAEjB,EAEA,MAAO,CACH,SAASK,EAAO,CACRA,IAAU,IACV,KAAK,YAAY,CAEzB,EAEA,SAAU,CACN,KAAK,UAAU,CACnB,EAEA,MAAO,CACH,QAAS,SAAUC,EAAU,CACzB,KAAK,WAAa,KAAK,iBAAiB,WAAWA,CAAQ,CAC/D,EACA,KAAM,EAAA,CAEd,EAEA,UAAW,CACA,MAAA,CACH,MAAO,KAAK,aAAa,KAAK,SAAS,CAC3C,CACJ,EAEA,MAAO,CACI,MAAA,CACH,qBAAsB,gBAAgBX,CAAoB,EAC1D,uBAAwB,gBAAgBC,CAAsB,EAC9D,gBAAiB,GACjB,UAAW,GACX,QAAS,GACT,WAAY,EAChB,CACJ,EAEA,SAAU,CACN,SAAU,CACC,OAAAM,EAAM,IAAI,SAAS,CAC9B,EAEA,WAAY,CACD,OAAAA,EAAM,IAAI,WAAW,CAChC,EAEA,cAAe,CACJ,OAAAA,EAAM,IAAI,cAAc,CACnC,EAEA,QAAS,CACE,OAAAA,EAAM,IAAI,WAAW,EAAE,MAClC,EAEA,OAAQ,CACJ,OAAO,KAAK,aAAa,KAC7B,EAEA,cAAe,CACP,OAAA,KAAK,WAAa,GACX,CACH,KAAM,qCACN,OAAQ,CAAE,GAAI,KAAK,OAAQ,CAC/B,EAGG,CAAE,KAAM,oCAAqC,CACxD,EAEA,YAAa,CACL,OAAA,KAAK,WAAa,GACX,CACH,KAAM,mCACN,OAAQ,CAAE,GAAI,KAAK,OAAQ,CAC/B,EAGG,CAAE,KAAM,kCAAmC,CACtD,EAEA,cAAe,CACP,OAAA,KAAK,WAAa,GACX,CACH,KAAM,qCACN,OAAQ,CAAE,GAAI,KAAK,OAAQ,CAC/B,EAGG,CAAE,KAAM,oCAAqC,CACxD,EAEA,eAAgB,CACR,OAAA,KAAK,WAAa,GACX,CACH,KAAM,sCACN,OAAQ,CAAE,GAAI,KAAK,OAAQ,CAC/B,EAGG,CAAE,KAAM,qCAAsC,CACzD,EAEA,kBAAmB,CACR,OAAA,KAAK,kBAAkB,OAAO,qBAAqB,CAC9D,EAEA,0BAA2B,CAChB,OAAA,KAAK,kBAAkB,OAAO,kBAAkB,CAC3D,EAEA,qBAA8B,CACtB,OAAA,KAAK,WAAa,GACX,KAAK,IACR,gDACJ,EAGG,KAAK,IAAI,+CAA+C,CACnE,EAEA,WAAY,CACR,OAAO,KAAK,YACR,KAAK,MACL,OACA,KAAK,IAAI,oCAAoC,CACjD,CACJ,EAEA,gBAAiB,CACN,OAAA,KAAK,IAAI,IAAI,4BAA4B,CACpD,EAEA,kBAAmB,CACR,OAAA,KAAK,IAAI,IAAI,6BAA6B,CACrD,EAEA,gBAAiB,CACN,OAAA,KAAK,IAAI,IAAI,4BAA4B,CACpD,EAEA,kBAAmB,CACR,OAAA,KAAK,IAAI,IAAI,6BAA6B,CACrD,EAEA,oBAAqB,CACjB,OACI,KAAK,MAAM,cAAc,MAAM,QAAQ,OAAS,YAC/C,KAAK,MAAM,YAAc,QACtB,KAAK,MAAM,YAAc,MACzB,KAAK,MAAM,YAAc,GAMrC,EAEA,uBAAwB,CAChB,MAAA,OAAK,MAAM,cAAc,kBAIjC,EAEA,2BAA4B,CACxB,OAAO,KAAK,GACR,4DACJ,CAAA,CAER,EAEA,QAAS,CACL,gBAAgBK,EAAS,CAChB,KAAA,UAAU,gBAAgBA,CAAO,CAC1C,EAEA,aAAc,CACV,KAAK,QAAQ,uBAAuB,EACpC,MAAMC,EAAQ,KAAK,iBAAiB,OAAOT,EAAQ,GAAG,EACtD,OAAO,OAAOS,EAAO,CACjB,cAAe,KAAK,qBACpB,gBAAiB,KAAK,sBAAA,CACzB,EACI,KAAA,aAAa,SAASA,CAAK,EACxB,QAAA,IAAI,aAAc,KAAK,KAAK,EACpC,KAAK,UAAY,EACrB,EAEA,aAAc,CACV,KAAK,UAAY,GAEZ,KAAA,iBACA,OAAO,KAAK,QAAST,EAAQ,GAAG,EAChC,KAAK,IAAM,CACR,KAAK,MAAM,eAAe,EAC1B,KAAK,QAAQ,KAAK,CAAE,KAAM,+BAAgC,CAAA,CAC7D,EACA,MAAOU,GAAU,CACd,QAAQ,MAAMA,CAAK,CAAA,CACtB,CACT,EAEA,WAAY,CAER,KAAK,iBACA,IAAI,KAAK,QAASV,EAAQ,IAAK,IAAII,CAAU,EAC7C,KAAMK,GAAU,CAWP,MAAAE,EAAc,KAAK,eAAeF,EAAO,CAC3C,cAAe,KAAK,qBACpB,gBAAiB,KAAK,sBAAA,CACzB,EACI,KAAA,aAAa,SAASE,CAAW,EACtC,KAAK,oBAAoB,CAAA,CAC5B,EACA,MAAOC,GAAc,CAClB,QAAQ,KAAKA,CAAS,CAAA,CACzB,EACA,QAAQ,IAAM,CACX,KAAK,UAAY,EAAA,CACpB,CACT,EAEA,qBAAsB,CACZ,MAAAC,EAAW,IAAIT,EAEZS,EAAA,UACLT,EAAS,OAAO,uBAAwB,qBAAqB,CACjE,EAEAS,EACK,eAAe,cAAc,EAC7B,WAAWT,EAAS,KAAK,4BAA4B,CAAC,EAEtD,KAAA,yBACA,OAAOS,EAAUb,EAAQ,GAAG,EAC5B,KAAMc,GAAW,CACT,KAAA,aAAa,kBAAkBA,CAAM,CAAA,CAC7C,EACA,MAAOF,GAAc,CAClB,QAAQ,KAAKA,CAAS,CAAA,CACzB,CACT,EAEA,cAAe,CACX,KAAK,QAAQ,KAAK,CAAE,KAAM,+BAAgC,CAC9D,EAEA,WAAWG,EAAY,CACnB,KAAK,QAAQ,KAAK,CACd,KAAM,6BACN,OAAQ,CAAE,GAAAA,CAAG,CAAA,CAChB,CACL,EAEA,MAAM,WAAY,CACd,GAES,KAAK,UAAY,KAAK,kBACvB,KAAK,eAQb,IAFA,KAAK,UAAY,GAGb,KAAK,MAAM,cAAc,MAAM,QAAQ,OAAS,WAChD,CAAC,OAAW,KAAM,EAAE,EAAE,SAAS,KAAK,MAAM,SAAS,EACrD,CACE,KAAK,wBAAwB,CACzB,QAAS,KAAK,GACV,wDAAA,CACJ,CACH,EACD,KAAK,UAAY,GACjB,MAAA,CAGJ,KAAK,iBACA,KAAK,KAAK,KAAK,EACf,KAAMD,GAAW,CACd,KAAK,0BAA0B,CAC3B,QAAS,KAAK,GACV,+CACA,CAAE,MAAO,KAAK,MAAM,IAAK,CAAA,CAC7B,CACH,EAEG,KAAK,WAAa,IAElB,KAAK,WAAW,KAAK,MAAMA,EAAO,OAAO,IAAI,EAAE,EAAE,EAGrD,KAAK,UAAU,CAAA,CAClB,EACA,MAAOE,GAAW,CAEX,KAAK,MAAM,OAAS,QACpB,KAAK,MAAM,OAAS,MACpB,KAAK,MAAM,OAAS,GAEpB,KAAK,wBAAwB,CACzB,MAAO,KAAK,IACR,qDACJ,EACA,QAAS,KAAK,IACV,gDAAA,CACJ,CACH,EAED,KAAK,wBAAwB,CACzB,QAAS,KAAK,IACV,2CAAA,CACJ,CACH,EAEL,QAAQ,MAAMA,CAAM,EACpB,KAAK,UAAY,EAAA,CACpB,EACT,EAEA,cAAe,CACP,KAAK,WAAa,GAClB,KAAK,aAAa,EAEb,KAAA,QAAQ,GAAG,CAAC,CAEzB,EAEA,sBAAuB,CACnB,KAAK,UAAU,CACnB,EAEA,uBAAwB,CACpB,OAAO,KAAK,iBAAiB,WAAW,KAAK,KAAK,CACtD,EAEA,iBAAiBC,EAAoB,CAC5B,KAAA,QAAQ,iBAAiBA,CAAU,EAEpC,KAAK,SACL,KAAK,UAAU,CAEvB,EAEA,aAAc,CACN,GAAA,KAAK,mBAAqB,GAC1B,OAGJ,GAAI,KAAK,iBAAiB,WAAW,KAAK,KAAK,EAAG,CAC9C,KAAK,wBAAwB,CACzB,QAAS,KAAK,IACV,oDAAA,CACJ,CACH,EACD,MAAA,CAGJ,MAAMC,EAAe,CACjB,WAAY,CACR,KAAM,GAAG,KAAK,MAAM,IAAI,IAAI,KAAK,IAAI,gCAAgC,CAAC,EAAA,CAE9E,EAEA,KAAK,UAAY,GAEZ,KAAA,iBACA,MAAM,KAAK,MAAM,GAAIA,CAAY,EACjC,KAAMJ,GAAW,CACd,KAAK,QAAQ,KAAK,CACd,KAAM,6BACN,OAAQ,CAAE,GAAIA,EAAO,EAAG,CAAA,CAC3B,CAAA,CACJ,EACA,MAAOJ,GAAU,CACd,QAAQ,KAAKA,CAAK,CAAA,CACrB,CACT,EAEA,eAAeD,EAAYU,EAAoB,CACpC,cAAA,QAAQA,CAAU,EAAE,QAAQ,CAAC,CAACC,EAAKC,CAAe,IAAM,CACvDZ,EAAMW,CAAG,EACHX,EAAAW,CAAG,EAAI5B,EAAM,OAAO,gBAAgB6B,EAAiBZ,EAAMW,CAAG,CAAC,EAErEX,EAAMW,CAAG,EAAIC,CACjB,CACH,EAEMZ,CAAA,CAEf,EAEA,SAAU,CACF,KAAK,WAAa,GAClB,KAAK,YAAY,EAEjB,KAAK,UAAU,CAEvB,EAEA,WAAY,CACR,KAAK,aAAa,WAAW,EAC7B,KAAK,aAAa,oBAAoB,EACtC,KAAK,UAAU,YAAY,CAAA,CAEnC,CAAC"}