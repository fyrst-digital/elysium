{"version":3,"file":"index-Bl_dWtTn.js","sources":["../../../app/administration/src/component/slides/form/focus-image/template.html.twig","../../../app/administration/src/component/slides/form/focus-image/index.ts"],"sourcesContent":["<mt-card\n    position-identifier=\"blurElysium.slide.form.focusImage\"\n    :title=\"$tc('blurElysiumSlides.forms.slideFocusImage.label')\" \n    :subtitle=\"$tc('blurElysiumSlides.forms.slideFocusImage.description')\"\n    :class=\"['content-no-padding']\">\n\n    <template #headerRight>\n\n        <blur-device-switch \n            layout=\"row\"\n            show-label=\"false\"\n            :default-viewport=\"device\"\n            :style=\"{\n                padding: '0',\n                width: '100%',\n                justifyContent: 'center',\n                '--container-gap': '12px',\n                '--icon-padding': '6px',\n                '--icon-bg-color': '#ffffff',\n                '--icon-hover-bg-color': 'var(--color-gray-100)',\n            }\" \n            :device=\"device\"\n            @change-device=\"device => elysiumUI.setDevice(device)\"\n            />\n    </template>\n\n    <blur-section>\n\n        <blur-column\n            padding\n            :cols=\"12\"\n            :cols-desktop=\"8\"\n            :style=\"viewStyle({\n                desktop: { borderRight: '1px solid var(--color-border-primary-default)' }\n            })\">\n\n            <sw-upload-listener\n                upload-tag=\"blur-elysium-slide-focus-image\"\n                auto-upload\n                @media-upload-finish=\"setFocusImage\"\n            />\n            <sw-media-upload-v2\n                variant=\"regular\"\n                label=\"Medium\"\n                :disabled=\"!(permissionCreate || permissionEdit)\"\n                file-accept=\"image/*\"\n                upload-tag=\"blur-elysium-slide-focus-image\"\n                :source=\"focusImage\"\n                :allow-multi-select=\"false\"\n                :default-folder=\"'blur_elysium_slides'\"\n                @media-upload-remove-image=\"removeFocusImage\"\n                @media-upload-sidebar-open=\"mediaModal.open = true\"\n            />\n        </blur-column>\n\n        <blur-column\n            padding\n            :cols=\"12\"\n            :cols-desktop=\"4\">\n\n            <blur-section\n                gap-y>\n\n                <blur-column>\n                    <mt-switch \n                        class=\"blur-switch-input\"\n                        @change=\"slideViewportSettings.image.imageFullWidth = $event\"\n                        :checked=\"slideViewportSettings.image.imageFullWidth\"\n                        :label=\"$tc('blurElysiumSlides.forms.focusImage.fullWidth')\" />\n                </blur-column>\n\n                <blur-column>\n                    <blur-number-input \n                        :label=\"$tc('blurElysiumSlides.forms.slideWidth.label')\"\n                        :placeholder=\"viewportsPlaceholder('image.maxWidth', $t('blurElysium.general.noLimit'))\"\n                        :show-device=\"true\"\n                        :device=\"device\"\n                        @on-device=\"deviceSwitch\"\n                        :model-value=\"slideViewportSettings.image.maxWidth\"\n                        @update-value=\"value => slideViewportSettings.image.maxWidth = value\" /> \n                </blur-column>\n\n                <blur-column>\n                    <blur-select-input \n                        :label=\"$tc('blurElysium.general.jusitifyContent')\" \n                        :placeholder=\"viewportsPlaceholder('image.justifyContent', 'center', 'blurElysium.general')\"\n                        :options=\"[\n                            { value: 'flex-start', label: $tc('blurElysium.general.jusitifyStart') },\n                            { value: 'center', label: $tc('blurElysium.general.jusitifyCenter') },\n                            { value: 'flex-end', label: $tc('blurElysium.general.jusitifyEnd') }\n                        ]\"\n                        :device=\"device\"\n                        :show-device=\"true\"\n                        @on-device=\"deviceSwitch\"\n                        v-model:value=\"slideViewportSettings.image.justifyContent\" />\n                </blur-column>\n            </blur-section>\n        </blur-column>\n    </blur-section>\n\n    <sw-media-modal-v2\n        v-if=\"mediaModal.open\"\n        :allow-multi-select=\"false\"\n        entity-context=\"blur_elysium_slides\"\n        @media-modal-selection-change=\"onAddMediaModal\"\n        @modal-close=\"mediaModal.open = false\" \n    />\n</mt-card>","import template from './template.html.twig'\n\nconst { Component, Mixin, Store, Context } = Shopware \n\nexport default Component.wrapComponentConfig({\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('blur-device-utilities'),\n        Mixin.getByName('blur-style-utilities'),\n    ],\n\n    inject: [\n        'repositoryFactory',\n        'acl'\n    ],\n\n    data () {\n        return {\n            mediaLoading: false,\n            mediaModal: {\n                open: false,\n                type: null\n            }\n        }\n    },\n\n    computed: {\n\n        elysiumUI () {\n            return Store.get('elysiumUI')\n        },\n\n        slide () {\n            return Store.get('elysiumSlide').slide\n        },\n\n        device () {\n            return this.elysiumUI.device\n        },\n\n        mediaSidebar () {\n            return this.elysiumUI.mediaSidebar\n        },\n\n        mediaRepository () {\n            return this.repositoryFactory.create('media')\n        },\n\n        slideViewportSettings () {\n            return this.slide.slideSettings.viewports[this.device]\n        },\n\n        focusImage () {\n            if (this.slide.presentationMedia) {\n                return this.slide.presentationMedia\n            }\n\n            return this.slide.presentationMedia || null            \n        },\n\n        permissionView() {\n            return this.acl.can('blur_elysium_slides.viewer')\n        },\n\n        permissionCreate() {\n            return this.acl.can('blur_elysium_slides.creator')\n        },\n\n        permissionEdit() {\n            return this.acl.can('blur_elysium_slides.editor')\n        },\n\n        permissionDelete() {\n            return this.acl.can('blur_elysium_slides.deleter')\n        },\n    },\n\n    methods: {\n\n        setFocusImage (media: any) {\n            this.mediaLoading = true\n\n            let mediaId = media.id || media.targetId || null\n\n            if (mediaId === null) {\n                // throw error message because mediaId is null\n                console.error('mediaId is null. Slide cover media can not be set.')\n                this.mediaLoading = false\n            } else {\n                // mediaId is provided handle media assignment\n                this.slide.presentationMediaId = mediaId\n\n                if (media.path) {\n\n                    // The media already exists in the system no need to fetch it. Use the already existing media object\n                    this.slide.presentationMedia = media;\n                    this.mediaLoading = false\n                } else {\n\n                    // The media does not exist in the system. Fetch the media object from media repository\n                    this.mediaRepository.get(\n                        mediaId,\n                        Context.api\n                    ).then((media) => {\n                        this.slide.presentationMedia = media;\n                        this.mediaLoading = false\n                    }).catch((exception) => {\n                        console.error(exception)\n                        this.mediaLoading = false\n                    })\n                }\n            }\n        },\n\n        removeFocusImage () {\n            this.slide.presentationMediaId = null;\n            this.slide.presentationMedia = null;\n        },\n\n        onAddMediaModal (payload) {\n            this.setFocusImage(payload[0])\n        }\n    },\n\n    created () {\n        this.viewportsSettings = this.slide.slideSettings.viewports\n    }\n})\n"],"names":["template","Component","Mixin","Store","Context","index","media","mediaId","exception","payload"],"mappings":"AAAA,MAAeA,EAAA,2tFCET,CAAE,UAAAC,EAAW,MAAAC,EAAO,MAAAC,EAAO,QAAAC,CAAY,EAAA,SAE9BC,EAAAJ,EAAU,oBAAoB,CACzC,SAAAD,EAEA,OAAQ,CACJE,EAAM,UAAU,cAAc,EAC9BA,EAAM,UAAU,uBAAuB,EACvCA,EAAM,UAAU,sBAAsB,CAC1C,EAEA,OAAQ,CACJ,oBACA,KACJ,EAEA,MAAQ,CACG,MAAA,CACH,aAAc,GACd,WAAY,CACR,KAAM,GACN,KAAM,IAAA,CAEd,CACJ,EAEA,SAAU,CAEN,WAAa,CACF,OAAAC,EAAM,IAAI,WAAW,CAChC,EAEA,OAAS,CACE,OAAAA,EAAM,IAAI,cAAc,EAAE,KACrC,EAEA,QAAU,CACN,OAAO,KAAK,UAAU,MAC1B,EAEA,cAAgB,CACZ,OAAO,KAAK,UAAU,YAC1B,EAEA,iBAAmB,CACR,OAAA,KAAK,kBAAkB,OAAO,OAAO,CAChD,EAEA,uBAAyB,CACrB,OAAO,KAAK,MAAM,cAAc,UAAU,KAAK,MAAM,CACzD,EAEA,YAAc,CACN,OAAA,KAAK,MAAM,kBACJ,KAAK,MAAM,kBAGf,KAAK,MAAM,mBAAqB,IAC3C,EAEA,gBAAiB,CACN,OAAA,KAAK,IAAI,IAAI,4BAA4B,CACpD,EAEA,kBAAmB,CACR,OAAA,KAAK,IAAI,IAAI,6BAA6B,CACrD,EAEA,gBAAiB,CACN,OAAA,KAAK,IAAI,IAAI,4BAA4B,CACpD,EAEA,kBAAmB,CACR,OAAA,KAAK,IAAI,IAAI,6BAA6B,CAAA,CAEzD,EAEA,QAAS,CAEL,cAAeG,EAAY,CACvB,KAAK,aAAe,GAEpB,IAAIC,EAAUD,EAAM,IAAMA,EAAM,UAAY,KAExCC,IAAY,MAEZ,QAAQ,MAAM,oDAAoD,EAClE,KAAK,aAAe,KAGpB,KAAK,MAAM,oBAAsBA,EAE7BD,EAAM,MAGN,KAAK,MAAM,kBAAoBA,EAC/B,KAAK,aAAe,IAIpB,KAAK,gBAAgB,IACjBC,EACAH,EAAQ,GAAA,EACV,KAAME,GAAU,CACd,KAAK,MAAM,kBAAoBA,EAC/B,KAAK,aAAe,EAAA,CACvB,EAAE,MAAOE,GAAc,CACpB,QAAQ,MAAMA,CAAS,EACvB,KAAK,aAAe,EAAA,CACvB,EAGb,EAEA,kBAAoB,CAChB,KAAK,MAAM,oBAAsB,KACjC,KAAK,MAAM,kBAAoB,IACnC,EAEA,gBAAiBC,EAAS,CACjB,KAAA,cAAcA,EAAQ,CAAC,CAAC,CAAA,CAErC,EAEA,SAAW,CACF,KAAA,kBAAoB,KAAK,MAAM,cAAc,SAAA,CAE1D,CAAC"}