const l=`<mt-banner v-if="arrowsViewportConfig === null" :style="{ margin: '20px' }" :variant="'attention'" > <div v-html="$tc('blurElysium.general.noViewportConfigAvailable')"/> </mt-banner> <blur-section gap padding > <div :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, })" > <mt-switch class="blur-switch-input" :checked="arrowsConfig.active" :label="$tc('blurElysiumSlider.config.arrows.active')" @change="arrowsConfig.active = $event" /> </div> </blur-section> <blur-section :title="$tc('blurElysium.general.appearance')" gap padding > <blur-select-input :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, tablet: { gridColumnEnd: 'span 6' }, })" :label="$tc('blurElysiumSlider.config.arrows.icons.label')" :placeholder="$tc('blurElysiumSlider.config.arrows.icons.chevron')" :options="icons" v-model:value="arrowsConfig.icon.default" /> <blur-number-input v-if="arrowsViewportConfig" :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, tablet: { gridColumnEnd: 'span 6' }, })" :model-value="arrowsViewportConfig.iconSize" @update-value="value => arrowsViewportConfig.iconSize = value" :placeholder="viewportsPlaceholder('arrows.iconSize', 24)" :label="$tc('blurElysiumSlider.config.arrows.size.label')" :show-device="true" :device="device" @on-device="cmsDeviceSwitch" /> <blur-colorpicker :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, tablet: { gridColumnEnd: 'span 6' }, desktop: { gridColumnEnd: 'span 3' }, })" :label="$tc('blurElysium.general.iconColor')" v-model:value="arrowsConfig.colors.default" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :zIndex="1010" /> <blur-colorpicker :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, tablet: { gridColumnEnd: 'span 6' }, desktop: { gridColumnEnd: 'span 3' }, })" :label="$tc('blurElysium.general.iconColorActive')" v-model:value="arrowsConfig.colors.active" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :zIndex="1010" /> <blur-colorpicker :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, tablet: { gridColumnEnd: 'span 6' }, desktop: { gridColumnEnd: 'span 3' }, })" :label="$tc('blurElysium.general.bgColor')" v-model:value="arrowsConfig.bgColors.default" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :zIndex="1010" /> <blur-colorpicker :style="viewStyle({ mobile: { gridColumnEnd: 'span 12' }, tablet: { gridColumnEnd: 'span 6' }, desktop: { gridColumnEnd: 'span 3' }, })" :label="$tc('blurElysium.general.bgColorActive')" v-model:value="arrowsConfig.bgColors.active" colorOutput="auto" :alpha="true" :disabled="false" :colorLabels="true" :zIndex="1010" /> </blur-section>`,{Component:i,Mixin:e,Store:r}=Shopware,t=i.wrapComponentConfig({template:l,mixins:[e.getByName("cms-state"),e.getByName("blur-device-utilities"),e.getByName("blur-style-utilities")],props:{config:{type:Object,required:!0}},data(){return{positions:[{value:"in_slider",label:this.$tc("blurElysiumSlider.config.navigation.position.inSlider")}],icons:[{value:"arrow-head",label:this.$tc("blurElysiumSlider.config.arrows.icons.chevron")},{value:"arrow",label:this.$tc("blurElysiumSlider.config.arrows.icons.arrow")}],sizes:[{value:"sm",label:this.$tc("blurElysium.general.small")},{value:"md",label:this.$tc("blurElysium.general.medium")},{value:"lg",label:this.$tc("blurElysium.general.large")}]}},computed:{cmsPage(){return r.get("cmsPage")},device(){return this.cmsPage.currentCmsDeviceView==="tablet-landscape"?"tablet":this.cmsPage.currentCmsDeviceView},arrowsConfig(){return this.config.arrows.value},arrowsViewportConfig(){return this.config.viewports.value[this.device]?this.config.viewports.value[this.device].arrows:null}},methods:{cmsDeviceSwitch(){this.device==="desktop"?this.cmsPage.setCurrentCmsDeviceView("mobile"):this.device==="mobile"?this.cmsPage.setCurrentCmsDeviceView("tablet-landscape"):this.device==="tablet"&&this.cmsPage.setCurrentCmsDeviceView("desktop")}},created(){this.viewportsSettings=this.config.viewports.value}});export{t as default};
//# sourceMappingURL=index-Dqy8EUxT.js.map
