const i = `<mt-card position-identifier="blurElysium.slide.section.display" :title="cardTitle" :subtitle="cardDescription" :class="['content-no-padding']" > <template #headerRight> <blur-device-switch layout="row" show-label="false" :style="{ padding: '0', width: '100%', justifyContent: 'center', '--container-gap': '12px', '--icon-padding': '6px', '--icon-bg-color': '#ffffff', '--icon-hover-bg-color': 'var(--color-gray-100)', }" :device="device" @change-device="device => elysiumUI.setDevice(device)" /> </template> <template #tabs> <mt-tabs :defaultItem="activeTab" :items="tabs" @new-item-active="activeTab = $event" /> </template> <elysium-slides-form-slide v-if="activeTab === 'slide'"/> <elysium-slides-form-container v-if="activeTab === 'container'"/> <elysium-slides-form-content v-if="activeTab === 'content'"/> </mt-card>`, { Component: t, Mixin: s, Store: a } = Shopware, l = t.wrapComponentConfig({ template: i, mixins: [s.getByName("blur-device-utilities")], data() { return { activeTab: "slide" } }, computed: { elysiumUI() { return a.get("elysiumUI") }, device() { return this.elysiumUI.device }, tabs() { return [{ label: this.$tc("blurElysiumSlides.forms.displaySlide.label"), description: this.$tc("blurElysiumSlides.forms.displaySlide.description"), name: "slide" }, { label: this.$tc("blurElysiumSlides.forms.displayContainer.label"), description: this.$tc("blurElysiumSlides.forms.displayContainer.description"), name: "container" }, { label: this.$tc("blurElysiumSlides.forms.displayContent.label"), description: this.$tc("blurElysiumSlides.forms.displayContent.description"), name: "content" }] }, activeTabMeta() { return this.tabs.find(e => e.name === this.activeTab) }, cardTitle() { return `${this.$tc("blurElysium.general.appearance")}: ${this.activeTabMeta.label}` }, cardDescription() { return this.activeTabMeta.description } } }); export { l as default };
//# sourceMappingURL=index-BLp4QztG.js.map
