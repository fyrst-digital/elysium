name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  setup-build:
    runs-on: ubuntu-latest
    services:
      # database:
      #   image: mariadb:10.11
      #   env:
      #     MYSQL_ROOT_PASSWORD: app
      #   options: >-
      #     --health-cmd="mysqladmin ping"
      #     --health-interval=10s
      #     --health-timeout=5s
      #     --health-retries=3
      #     --name database
      app:
        image: shopware/development:8.2-node-20.10-composer-2
        volumes:
          - ${{ github.workspace }}:/BlurElysiumSlider
          - /app:/app
        options:
          --name app
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Create database
      #   run: docker exec database mysql -uroot -papp -e "CREATE DATABASE app"

      - name: Set up Shopware build
        run: |
          docker exec app composer create-project shopware/production:v6.6.10.1 /app
          docker exec app composer require --dev phpstan/phpstan
          docker exec app cp /BlurElysiumSlider/.devops/phpstan.neon /app
          docker exec app cp /BlurElysiumSlider/.devops/.env.local /app
          docker exec app cp -r /BlurElysiumSlider /app/custom/static-plugins/.
          docker exec app cd /app/custom/static-plugins/BlurElysiumSlider && rm -rf .git .gitignore .github .devops
          docker exec app composer require blurcreative/elysium-slider

      - name: Upload Shopware build
        uses: actions/upload-artifact@v4
        with:
          name: shopware-build
          path: /app


        # run: |
        #   docker exec app composer create-project shopware/production:v6.6.10.1 /app
        #   docker exec app composer require --dev phpstan/phpstan
        #   docker exec app cp /BlurElysiumSlider/.devops/phpstan.neon /app
        #   docker exec app cp /BlurElysiumSlider/.devops/.env.local /app
        #   docker exec app bin/console system:install --basic-setup -q -n
        #   docker exec app cp -r /BlurElysiumSlider /app/custom/static-plugins/.
        #   docker exec app composer require blurcreative/elysium-slider
        #   docker exec app bin/console plugin:refresh
        #   docker exec app bin/console plugin:install --activate BlurElysiumSlider
        #   docker exec app bin/console cache:clear

  phpstan:
    needs: setup-build
    runs-on: ubuntu-latest
    services:
      app:
        image: shopware/development:8.2-node-20.10-composer-2
        volumes:
          - /home/runner/work/app:/app
        options:
          --name app
    steps:
      - name: Download Shopware build
        uses: actions/download-artifact@v4
        with:
          name: shopware-build
          path: ~/app

      - name: Test
        run: |
          cd ~/app && ls -la

      - name: Run PHPStan
        run: |
          docker exec app ls -la
          docker exec app pwd

  # eslint:
  #   needs: setup-environment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Run ESLint
  #       run: |
  #         docker exec shopware cd /app/custom/static-plugins/BlurElysiumSlider
  #         docker exec shopware npm install
  #         docker exec shopware npm run lint:administration

  bundle:
    needs: setup-build
    runs-on: ubuntu-latest
    services:
      app:
        image: shopware/development:8.2-node-20.10-composer-2
        options:
          --name app
    steps:
      - name: Download Shopware build
        uses: actions/download-artifact@v4
        with:
          name: shopware-build
          path: ~/app

      - name: Bundle plugin
        run: docker ps -a
        # run: |
        #   docker exec app bin/build-administration.sh
        #   docker exec app bin/build-storefront.sh
        #   docker exec app cd /app/custom/static-plugins/BlurElysiumSlider
        #   docker exec app rm -rf .git .gitignore .github .devops
        #   docker exec app cp -r /app/custom/static-plugins/BlurElysiumSlider /app
        #   docker exec app ls -la /app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: BlurElysiumSlider
          path: /app/BlurElysiumSlider

  changelog:
    needs: setup-build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Generate changelog
        run: |
          docker exec shopware npm install
          docker exec shopware npm run md:changelog
          docker exec shopware ls -la /app && docker exec shopware pwd

      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: changelog
          path: /app/changelog/.mdout/*
